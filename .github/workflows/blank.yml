# This is a basic workflow to help you get started with Actions

name: CI
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.VAR_1 }}
  GITHUB_CONTEXT_TEST: ${{ toJSON(github) }}
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - run: |
          echo ${{ github.workspace }}
          echo $GITHUB_WORKSPACE  
          
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Write variables
        run: |
            echo "VAR_1 from shell environment : ${{env.vars.VAR_1 }}"
            echo "VAR_1 from shell environment : ${{env.vars.VAR_1 }}"
            echo "SEC_1 from shell environment : ${{env.secrets.SEC_1 }}"
            echo "ENV from shell environment : ${{env}}"
            echo "variable from shell environment : $env_var"
            echo '${{ toJSON(env) }}'
        continue-on-error: true
        
      - name: Write GITHUB_CONTEXT
        run: |
            echo "$GITHUB_CONTEXT"
        continue-on-error: true
        
      - name: Write GITHUB_CONTEXT_TEST
        run: |
            echo "$GITHUB_CONTEXT_TEST"
        continue-on-error: true
      
  powerShellIssues:
      # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Install prerequisites
      shell: pwsh
      run: |
        Install-Module AadAuthenticationFactory -AllowPrerelease -Force -Scope CurrentUser
        Write-Host "VAR_1:"
        Write-Host ${{vars.VAR_1}}
      continue-on-error: true
    
    - name: Write files names
      shell: pwsh
      run: |
        $files = Get-ChildItem "$env:GITHUB_WORKSPACE" -File -Recurse -Include *.ps1, *.ps1xml, *.psd1, *.psm1, *.pssc, *.psrc, *.cdxml
        try {
            foreach ($file in $files) {
              Write-Host $file
              Write-Host $file.name
            }
        }
        catch {
            Write-Host "Error: $($_.Exception)"
            throw
        }
        Write-Host "Signed files summary"
      continue-on-error: true
        
    - name: Install NMP Dependencies
      run: npm install    
      continue-on-error: true
      
  compilation: 
    runs-on: ubuntu-latest
    steps:
      - name: Set up dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
  
      - name: Set up dependency caching
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
  
      - name: Publish with dotnet
        shell: bash
        run: dotnet publish -c Release -r win-x64 -o ./output --self-contained '${{inputs.project-path}}'
  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{inputs.artifact-name}}
          path: ./output
          overwrite: true
          
