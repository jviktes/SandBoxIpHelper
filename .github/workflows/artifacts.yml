name: Artifacts
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

    # This workflow contains a single job called "build"
    checkOut:
        # The type of runner that the job will run on
        runs-on: [self-hosted] #ubuntu-latest #windows-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - name: checkout
            uses: actions/checkout@v2

    builder:
        runs-on: [self-hosted] #ubuntu-latest #windows-latest 
        outputs:
            ovalue: ${{ steps.with_output.outputs.ovalue }}  # map the step output to job output   
        steps:
        - name: Build
          id: with_output
          run: |
            mkdir -p artifacts
            echo 'ExampleValue' > artifacts/data.txt
            echo "::set-output name=ovalue::output value\n"
        - name: Upload output file
          uses: actions/upload-artifact@v4
          with:
            name: output-data
            path: artifacts/*.txt
        continue-on-error: true

    # You can only download artifacts in a workflow that were uploaded during the same workflow run.
    consume-artifact:
        runs-on: self-hosted
        needs: builder             
        steps:
        - name: Consume output
          run: |
            echo "${{ needs.builder.outputs.ovalue }}"
        - name: Download a single artifact
          uses: actions/download-artifact@v4
          with:
            name: output-data
            path: ./downloaded
        - name: Display structure of downloaded files
          run: |
            Get-ChildItem ./downloaded
        - name: Consume
          run: |
            type downloaded/data.txt

    parallel-job:
        runs-on: self-hosted
        needs: builder
        steps:
            - run: echo 'running other paralel job'

    finishing-job:
        runs-on: self-hosted
        needs:  [consume-artifact, parallel-job]
        steps:
            - run: echo 'running finishing job'
    